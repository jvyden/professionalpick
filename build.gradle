buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id "com.peterabeles.gversion" version "1.8.2"
}

apply plugin: 'net.minecraftforge.gradle'

group = project.modGroup
version = project.modVersion
archivesBaseName = project.modBaseName

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}


minecraft {
    mappings channel: 'stable', version: '39-1.12'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                professionalpick {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                professionalpick {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + project.forgeVersion
}

jar.finalizedBy('reobfJar')

compileJava.dependsOn(createVersionFile)
gversion {
    srcDir       = "src/main/java/"           // path is relative to the sub-project by default
    // Gradle variables can also be used
    // E.g. "${project.rootDir}/module/src/main/java"
    classPackage = "exposed.jvyden.professionalpick"
    className    = "BuildInfo"                // optional. If not specified GVersion is used
    dateFormat   = "yyyy-MM-dd'T'HH:mm:ss'Z'" // optional. This is the default
    timeZone     = "UTC"                      // optional. UTC is default
    debug        = true
    language     = "java"                     // optional. Can be Java, Kotlin, or YAML. Case insensitive.
    explicitType = true                      // optional. Force types to be explicitly printed
    indent       = "    "                     // optional. Change how code is indented. 1 tab is default.
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
}

